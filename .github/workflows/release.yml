name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.24'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: make test

    - name: Run lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest

  build-and-release:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build for all platforms
      run: make package-releases

    - name: Generate changelog
      run: |
        echo "# Release $(git describe --tags --always)" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "## Changes" >> CHANGELOG.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> CHANGELOG.md 2>/dev/null || echo "- Initial release" >> CHANGELOG.md

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: release/*
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-install-script:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update install script repository reference
      run: |
        # Extract repository owner and name from GITHUB_REPOSITORY
        REPO_OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
        REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
        
        # Update the install script to use the correct repository
        sed -i "s/REPO=\"your-org\/kuber\"/REPO=\"${REPO_OWNER}\/${REPO_NAME}\"/" install.sh
        
        # Update README to use correct repository URLs
        sed -i "s/your-org\/kuber/${REPO_OWNER}\/${REPO_NAME}/g" README.md

    - name: Commit updated files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git add install.sh README.md
          git commit -m "Update repository references in install script and README" || true
          git push || true
        fi